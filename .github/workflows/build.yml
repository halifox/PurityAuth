name: Flutter Build

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

# 定义可重用的工作流
jobs:
  build_release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: web
          - os: ubuntu-latest
            target: linux
          - os: ubuntu-latest
            target: android
          - os: windows-latest
            target: windows
          - os: macos-latest
            target: macos
          - os: macos-latest
            target: ios

    steps:
      - name: Set up repository
        uses: actions/checkout@v4

      - name: Set up Java (for Android)
        if: matrix.target == 'android'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build web
        if: matrix.target == 'web'
        run: flutter build web --release
        env:
          BUILD_PATH: build/web

      - name: Build Linux
        if: matrix.target == 'linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
          flutter build linux --release
        env:
          BUILD_PATH: build/linux/x64/release/bundle

      - name: Build Windows
        if: matrix.target == 'windows'
        run: flutter build windows --release
        env:
          BUILD_PATH: build/windows/x64/runner/Release

      - name: Build macOS
        if: matrix.target == 'macos'
        run: flutter build macos --release
        env:
          BUILD_PATH: build/macos/Build/Products/Release

      - name: Build Android APK
        if: matrix.target == 'android'
        run: flutter build apk --release --split-per-abi
        env:
          BUILD_PATH: build/app/outputs/flutter-apk

      - name: Build iOS
        if: matrix.target == 'ios'
        run: flutter build ios --release --no-codesign # 注意: 此处未处理代码签名
        env:
          BUILD_PATH: build/ios/iphoneos/Runner.app

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-build-${{ github.ref_name }}
          path: ${{ env.BUILD_PATH }}
        if: env.BUILD_PATH != ''

      - name: Create release asset (Web)
        if: matrix.target == 'web' && startsWith(github.ref, 'refs/tags/')
        run: tar -czvf web-universal-${{ github.ref_name }}-release.tar.gz -C ${{ env.BUILD_PATH }} .
        env:
          ASSET_PATH: web-universal-${{ github.ref_name }}-release.tar.gz

      - name: Create release asset (Linux)
        if: matrix.target == 'linux' && startsWith(github.ref, 'refs/tags/')
        run: tar -czvf linux-x86_64-${{ github.ref_name }}-release.tar.gz -C ${{ env.BUILD_PATH }} .
        env:
          ASSET_PATH: linux-x86_64-${{ github.ref_name }}-release.tar.gz

      - name: Create release asset (Windows)
        if: matrix.target == 'windows' && startsWith(github.ref, 'refs/tags/')
        run: Compress-Archive -Path ${{ env.BUILD_PATH }}/* -DestinationPath windows-x86_64-${{ github.ref_name }}-release.zip
        env:
          ASSET_PATH: windows-x86_64-${{ github.ref_name }}-release.zip

      - name: Create release asset (macOS)
        if: matrix.target == 'macos' && startsWith(github.ref, 'refs/tags/')
        run: |
          APP_NAME=$(ls ${{ env.BUILD_PATH }}/*.app)
          zip -r macos-universal-${{ github.ref_name }}-release.zip $APP_NAME
        env:
          ASSET_PATH: macos-universal-${{ github.ref_name }}-release.zip

      - name: Create release asset (Android APK)
        if: matrix.target == 'android' && startsWith(github.ref, 'refs/tags/')
        run: |
          mv ${{ env.BUILD_PATH }}/app-armeabi-v7a-release.apk app-armeabi-v7a-${{ github.ref_name }}-release.apk
          mv ${{ env.BUILD_PATH }}/app-arm64-v8a-release.apk app-arm64-v8a-${{ github.ref_name }}-release.apk
          mv ${{ env.BUILD_PATH }}/app-x86_64-release.apk app-x86_64-${{ github.ref_name }}-release.apk
        env:
          ASSET_PATH: ${{ env.BUILD_PATH }}/*.apk

      - name: Create release asset (iOS)
        if: matrix.target == 'ios' && startsWith(github.ref, 'refs/tags/')
        run: zip -r ios-universal-${{ github.ref_name }}-release.zip ${{ env.BUILD_PATH }}
        env:
          ASSET_PATH: ios-universal-${{ github.ref_name }}-release.zip

      - name: Publish release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.ASSET_PATH }}
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false